Traceback (most recent call last):
  File "/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
tf.random.set_seed(42)
np.random.seed(42)

model = keras.models.Sequential([
    keras.layers.Flatten(input_shape=[28, 28]),
    keras.layers.Dense(300, kernel_initializer="he_normal"),
    keras.layers.LeakyReLU(),
    keras.layers.Dense(100, kernel_initializer="he_normal"),
    keras.layers.LeakyReLU(),
    keras.layers.Dense(10, activation="softmax")
])
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m/var/folders/93/795zm8c93m16_92qkk86t0_r0000gn/T/ipykernel_59502/2792105430.py[0m in [0;36m<module>[0;34m[0m
[1;32m      2[0m [0mnp[0m[0;34m.[0m[0mrandom[0m[0;34m.[0m[0mseed[0m[0;34m([0m[0;36m42[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0;34m[0m[0m
[0;32m----> 4[0;31m model = keras.models.Sequential([
[0m[1;32m      5[0m     [0mkeras[0m[0;34m.[0m[0mlayers[0m[0;34m.[0m[0mFlatten[0m[0;34m([0m[0minput_shape[0m[0;34m=[0m[0;34m[[0m[0;36m28[0m[0;34m,[0m [0;36m28[0m[0;34m][0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m      6[0m     [0mkeras[0m[0;34m.[0m[0mlayers[0m[0;34m.[0m[0mDense[0m[0;34m([0m[0;36m300[0m[0;34m,[0m [0mkernel_initializer[0m[0;34m=[0m[0;34m"he_normal"[0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/training/tracking/base.py[0m in [0;36m_method_wrapper[0;34m(self, *args, **kwargs)[0m
[1;32m    528[0m     [0mself[0m[0;34m.[0m[0m_self_setattr_tracking[0m [0;34m=[0m [0;32mFalse[0m  [0;31m# pylint: disable=protected-access[0m[0;34m[0m[0;34m[0m[0m
[1;32m    529[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 530[0;31m       [0mresult[0m [0;34m=[0m [0mmethod[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    531[0m     [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    532[0m       [0mself[0m[0;34m.[0m[0m_self_setattr_tracking[0m [0;34m=[0m [0mprevious_value[0m  [0;31m# pylint: disable=protected-access[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/keras/engine/sequential.py[0m in [0;36m__init__[0;34m(self, layers, name)[0m
[1;32m    105[0m     """
[1;32m    106[0m     [0;31m# Skip the init in FunctionalModel since model doesn't have input/output yet[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 107[0;31m     super(functional.Functional, self).__init__(  # pylint: disable=bad-super-call
[0m[1;32m    108[0m         name=name, autocast=False)
[1;32m    109[0m     [0mbase_layer[0m[0;34m.[0m[0mkeras_api_gauge[0m[0;34m.[0m[0mget_cell[0m[0;34m([0m[0;34m'Sequential'[0m[0;34m)[0m[0;34m.[0m[0mset[0m[0;34m([0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/training/tracking/base.py[0m in [0;36m_method_wrapper[0;34m(self, *args, **kwargs)[0m
[1;32m    528[0m     [0mself[0m[0;34m.[0m[0m_self_setattr_tracking[0m [0;34m=[0m [0;32mFalse[0m  [0;31m# pylint: disable=protected-access[0m[0;34m[0m[0;34m[0m[0m
[1;32m    529[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 530[0;31m       [0mresult[0m [0;34m=[0m [0mmethod[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    531[0m     [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    532[0m       [0mself[0m[0;34m.[0m[0m_self_setattr_tracking[0m [0;34m=[0m [0mprevious_value[0m  [0;31m# pylint: disable=protected-access[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/keras/engine/training.py[0m in [0;36m__init__[0;34m(self, *args, **kwargs)[0m
[1;32m    287[0m     [0mself[0m[0;34m.[0m[0m_steps_per_execution[0m [0;34m=[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m    288[0m [0;34m[0m[0m
[0;32m--> 289[0;31m     [0mself[0m[0;34m.[0m[0m_init_batch_counters[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    290[0m     [0mself[0m[0;34m.[0m[0m_base_model_initialized[0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m
[1;32m    291[0m [0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/training/tracking/base.py[0m in [0;36m_method_wrapper[0;34m(self, *args, **kwargs)[0m
[1;32m    528[0m     [0mself[0m[0;34m.[0m[0m_self_setattr_tracking[0m [0;34m=[0m [0;32mFalse[0m  [0;31m# pylint: disable=protected-access[0m[0;34m[0m[0;34m[0m[0m
[1;32m    529[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 530[0;31m       [0mresult[0m [0;34m=[0m [0mmethod[0m[0;34m([0m[0mself[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    531[0m     [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    532[0m       [0mself[0m[0;34m.[0m[0m_self_setattr_tracking[0m [0;34m=[0m [0mprevious_value[0m  [0;31m# pylint: disable=protected-access[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/keras/engine/training.py[0m in [0;36m_init_batch_counters[0;34m(self)[0m
[1;32m    295[0m     [0;31m# `evaluate`, and `predict`.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    296[0m     [0magg[0m [0;34m=[0m [0mtf[0m[0;34m.[0m[0mVariableAggregation[0m[0;34m.[0m[0mONLY_FIRST_REPLICA[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 297[0;31m     [0mself[0m[0;34m.[0m[0m_train_counter[0m [0;34m=[0m [0mtf[0m[0;34m.[0m[0mVariable[0m[0;34m([0m[0;36m0[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0;34m'int64'[0m[0;34m,[0m [0maggregation[0m[0;34m=[0m[0magg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    298[0m     [0mself[0m[0;34m.[0m[0m_test_counter[0m [0;34m=[0m [0mtf[0m[0;34m.[0m[0mVariable[0m[0;34m([0m[0;36m0[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0;34m'int64'[0m[0;34m,[0m [0maggregation[0m[0;34m=[0m[0magg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    299[0m     self._predict_counter = tf.Variable(

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/ops/variables.py[0m in [0;36m__call__[0;34m(cls, *args, **kwargs)[0m
[1;32m    266[0m       [0;32mreturn[0m [0mcls[0m[0;34m.[0m[0m_variable_v1_call[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    267[0m     [0;32melif[0m [0mcls[0m [0;32mis[0m [0mVariable[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 268[0;31m       [0;32mreturn[0m [0mcls[0m[0;34m.[0m[0m_variable_v2_call[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    269[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    270[0m       [0;32mreturn[0m [0msuper[0m[0;34m([0m[0mVariableMetaclass[0m[0;34m,[0m [0mcls[0m[0;34m)[0m[0;34m.[0m[0m__call__[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/ops/variables.py[0m in [0;36m_variable_v2_call[0;34m(cls, initial_value, trainable, validate_shape, caching_device, name, variable_def, dtype, import_scope, constraint, synchronization, aggregation, shape)[0m
[1;32m    248[0m     [0;32mif[0m [0maggregation[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    249[0m       [0maggregation[0m [0;34m=[0m [0mVariableAggregation[0m[0;34m.[0m[0mNONE[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 250[0;31m     return previous_getter(
[0m[1;32m    251[0m         [0minitial_value[0m[0;34m=[0m[0minitial_value[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    252[0m         [0mtrainable[0m[0;34m=[0m[0mtrainable[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/ops/variables.py[0m in [0;36m<lambda>[0;34m(**kws)[0m
[1;32m    241[0m                         shape=None):
[1;32m    242[0m     [0;34m"""Call on Variable class. Useful to force the signature."""[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 243[0;31m     [0mprevious_getter[0m [0;34m=[0m [0;32mlambda[0m [0;34m**[0m[0mkws[0m[0;34m:[0m [0mdefault_variable_creator_v2[0m[0;34m([0m[0;32mNone[0m[0;34m,[0m [0;34m**[0m[0mkws[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    244[0m     [0;32mfor[0m [0m_[0m[0;34m,[0m [0mgetter[0m [0;32min[0m [0mops[0m[0;34m.[0m[0mget_default_graph[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0m_variable_creator_stack[0m[0;34m:[0m  [0;31m# pylint: disable=protected-access[0m[0;34m[0m[0;34m[0m[0m
[1;32m    245[0m       [0mprevious_getter[0m [0;34m=[0m [0m_make_getter[0m[0;34m([0m[0mgetter[0m[0;34m,[0m [0mprevious_getter[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/ops/variable_scope.py[0m in [0;36mdefault_variable_creator_v2[0;34m(next_creator, **kwargs)[0m
[1;32m   2660[0m   [0mshape[0m [0;34m=[0m [0mkwargs[0m[0;34m.[0m[0mget[0m[0;34m([0m[0;34m"shape"[0m[0;34m,[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2661[0m [0;34m[0m[0m
[0;32m-> 2662[0;31m   return resource_variable_ops.ResourceVariable(
[0m[1;32m   2663[0m       [0minitial_value[0m[0;34m=[0m[0minitial_value[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2664[0m       [0mtrainable[0m[0;34m=[0m[0mtrainable[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/ops/variables.py[0m in [0;36m__call__[0;34m(cls, *args, **kwargs)[0m
[1;32m    268[0m       [0;32mreturn[0m [0mcls[0m[0;34m.[0m[0m_variable_v2_call[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    269[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 270[0;31m       [0;32mreturn[0m [0msuper[0m[0;34m([0m[0mVariableMetaclass[0m[0;34m,[0m [0mcls[0m[0;34m)[0m[0;34m.[0m[0m__call__[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    271[0m [0;34m[0m[0m
[1;32m    272[0m [0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/ops/resource_variable_ops.py[0m in [0;36m__init__[0;34m(self, initial_value, trainable, collections, validate_shape, caching_device, name, dtype, variable_def, import_scope, constraint, distribute_strategy, synchronization, aggregation, shape)[0m
[1;32m   1600[0m       [0mself[0m[0;34m.[0m[0m_init_from_proto[0m[0;34m([0m[0mvariable_def[0m[0;34m,[0m [0mimport_scope[0m[0;34m=[0m[0mimport_scope[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1601[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1602[0;31m       self._init_from_args(
[0m[1;32m   1603[0m           [0minitial_value[0m[0;34m=[0m[0minitial_value[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1604[0m           [0mtrainable[0m[0;34m=[0m[0mtrainable[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/ops/resource_variable_ops.py[0m in [0;36m_init_from_args[0;34m(self, initial_value, trainable, collections, caching_device, name, dtype, constraint, synchronization, aggregation, distribute_strategy, shape)[0m
[1;32m   1754[0m           [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1755[0m             [0mshape[0m [0;34m=[0m [0minitial_value[0m[0;34m.[0m[0mshape[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1756[0;31m           handle = eager_safe_variable_handle(
[0m[1;32m   1757[0m               [0minitial_value[0m[0;34m=[0m[0minitial_value[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1758[0m               [0mshape[0m[0;34m=[0m[0mshape[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/ops/resource_variable_ops.py[0m in [0;36meager_safe_variable_handle[0;34m(initial_value, shape, shared_name, name, graph_mode)[0m
[1;32m    236[0m   """
[1;32m    237[0m   [0mdtype[0m [0;34m=[0m [0minitial_value[0m[0;34m.[0m[0mdtype[0m[0;34m.[0m[0mbase_dtype[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 238[0;31m   return _variable_handle_from_shape_and_dtype(shape, dtype, shared_name, name,
[0m[1;32m    239[0m                                                graph_mode, initial_value)
[1;32m    240[0m [0;34m[0m[0m

[0;32m/usr/local/Caskroom/miniconda/base/envs/kaggle/lib/python3.9/site-packages/tensorflow/python/ops/resource_variable_ops.py[0m in [0;36m_variable_handle_from_shape_and_dtype[0;34m(shape, dtype, shared_name, name, graph_mode, initial_value)[0m
[1;32m    176[0m     [0mhandle_data[0m[0;34m.[0m[0mis_set[0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m
[1;32m    177[0m     handle_data.shape_and_type.append(
[0;32m--> 178[0;31m         cpp_shape_inference_pb2.CppShapeInferenceResult.HandleShapeAndType(
[0m[1;32m    179[0m             shape=shape.as_proto(), dtype=dtype.as_datatype_enum))
[1;32m    180[0m [0;34m[0m[0m

[0;31mTypeError[0m: Parameter to MergeFrom() must be instance of same class: expected tensorflow.TensorShapeProto got tensorflow.TensorShapeProto.
TypeError: Parameter to MergeFrom() must be instance of same class: expected tensorflow.TensorShapeProto got tensorflow.TensorShapeProto.

